




















// This file was automatically generated by the PetaPoco T4 Template
// Do not make changes directly to this file - edit the template instead
// 
// The following connection settings were used to generate this file
// 
//     Connection String Name: `PetaPoco`
//     Provider:               `System.Data.SqlClient`
//     Connection String:      `data source=.;initial catalog=Leopold;persist security info=True;user id=sa;password=**zapped**;`
//     Schema:                 ``
//     Include Views:          `False`



using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using PetaPoco;

namespace WCFServer.Data.PetaPoco
{

	public partial class PetaPocoDB : Database
	{
		public PetaPocoDB() 
			: base("PetaPoco")
		{
			CommonConstruct();
		}

		public PetaPocoDB(string connectionStringName) 
			: base(connectionStringName)
		{
			CommonConstruct();
		}
		
		partial void CommonConstruct();
		
		public interface IFactory
		{
			PetaPocoDB GetInstance();
		}
		
		public static IFactory Factory { get; set; }
        public static PetaPocoDB GetInstance()
        {
			if (_instance!=null)
				return _instance;
				
			if (Factory!=null)
				return Factory.GetInstance();
			else
				return new PetaPocoDB();
        }

		[ThreadStatic] static PetaPocoDB _instance;
		
		public override void OnBeginTransaction()
		{
			if (_instance==null)
				_instance=this;
		}
		
		public override void OnEndTransaction()
		{
			if (_instance==this)
				_instance=null;
		}
        

		public class Record<T> where T:new()
		{
			public static PetaPocoDB repo { get { return PetaPocoDB.GetInstance(); } }
			public bool IsNew() { return repo.IsNew(this); }
			public object Insert() { return repo.Insert(this); }

			public void Save() { repo.Save(this); }
			public int Update() { return repo.Update(this); }

			public int Update(IEnumerable<string> columns) { return repo.Update(this, columns); }
			public static int Update(string sql, params object[] args) { return repo.Update<T>(sql, args); }
			public static int Update(Sql sql) { return repo.Update<T>(sql); }
			public int Delete() { return repo.Delete(this); }
			public static int Delete(string sql, params object[] args) { return repo.Delete<T>(sql, args); }
			public static int Delete(Sql sql) { return repo.Delete<T>(sql); }
			public static int Delete(object primaryKey) { return repo.Delete<T>(primaryKey); }
			public static bool Exists(object primaryKey) { return repo.Exists<T>(primaryKey); }
			public static bool Exists(string sql, params object[] args) { return repo.Exists<T>(sql, args); }
			public static T SingleOrDefault(object primaryKey) { return repo.SingleOrDefault<T>(primaryKey); }
			public static T SingleOrDefault(string sql, params object[] args) { return repo.SingleOrDefault<T>(sql, args); }
			public static T SingleOrDefault(Sql sql) { return repo.SingleOrDefault<T>(sql); }
			public static T FirstOrDefault(string sql, params object[] args) { return repo.FirstOrDefault<T>(sql, args); }
			public static T FirstOrDefault(Sql sql) { return repo.FirstOrDefault<T>(sql); }
			public static T Single(object primaryKey) { return repo.Single<T>(primaryKey); }
			public static T Single(string sql, params object[] args) { return repo.Single<T>(sql, args); }
			public static T Single(Sql sql) { return repo.Single<T>(sql); }
			public static T First(string sql, params object[] args) { return repo.First<T>(sql, args); }
			public static T First(Sql sql) { return repo.First<T>(sql); }
			public static List<T> Fetch(string sql, params object[] args) { return repo.Fetch<T>(sql, args); }
			public static List<T> Fetch(Sql sql) { return repo.Fetch<T>(sql); }
			public static List<T> Fetch(long page, long itemsPerPage, string sql, params object[] args) { return repo.Fetch<T>(page, itemsPerPage, sql, args); }
			public static List<T> Fetch(long page, long itemsPerPage, Sql sql) { return repo.Fetch<T>(page, itemsPerPage, sql); }
			public static List<T> SkipTake(long skip, long take, string sql, params object[] args) { return repo.SkipTake<T>(skip, take, sql, args); }
			public static List<T> SkipTake(long skip, long take, Sql sql) { return repo.SkipTake<T>(skip, take, sql); }
			public static Page<T> Page(long page, long itemsPerPage, string sql, params object[] args) { return repo.Page<T>(page, itemsPerPage, sql, args); }
			public static Page<T> Page(long page, long itemsPerPage, Sql sql) { return repo.Page<T>(page, itemsPerPage, sql); }
			public static IEnumerable<T> Query(string sql, params object[] args) { return repo.Query<T>(sql, args); }
			public static IEnumerable<T> Query(Sql sql) { return repo.Query<T>(sql); }

		}

	}
	



    

	[TableName("dbo.sys_dictionary_mst")]



	[PrimaryKey("parent_type", AutoIncrement=false)]


	[ExplicitColumns]

    public partial class sys_dictionary_mst : PetaPocoDB.Record<sys_dictionary_mst>  
    {



		[Column] public string parent_type { get; set; }





		[Column] public string type { get; set; }





		[Column] public string lang_no { get; set; }





		[Column] public string dic_content { get; set; }





		[Column] public string description { get; set; }





		[Column] public string update_user { get; set; }





		[Column] public DateTime update_time { get; set; }





		[Column] public string create_user { get; set; }





		[Column] public DateTime create_time { get; set; }



	}

    

	[TableName("dbo.sys_group_mst")]



	[PrimaryKey("group_no", AutoIncrement=false)]


	[ExplicitColumns]

    public partial class sys_group_mst : PetaPocoDB.Record<sys_group_mst>  
    {



		[Column] public string group_no { get; set; }





		[Column] public string group_name { get; set; }





		[Column] public string description { get; set; }





		[Column] public string status { get; set; }





		[Column] public string update_user { get; set; }





		[Column] public DateTime update_time { get; set; }





		[Column] public string create_user { get; set; }





		[Column] public DateTime create_time { get; set; }



	}

    

	[TableName("dbo.sys_language_mst")]



	[PrimaryKey("lang_no", AutoIncrement=false)]


	[ExplicitColumns]

    public partial class sys_language_mst : PetaPocoDB.Record<sys_language_mst>  
    {



		[Column] public string lang_no { get; set; }





		[Column] public string lang_name { get; set; }





		[Column] public string status { get; set; }





		[Column] public string update_user { get; set; }





		[Column] public DateTime update_time { get; set; }





		[Column] public string create_user { get; set; }





		[Column] public DateTime create_time { get; set; }



	}

    

	[TableName("dbo.sys_log_mst")]




	[ExplicitColumns]

    public partial class sys_log_mst : PetaPocoDB.Record<sys_log_mst>  
    {



		[Column] public int id { get; set; }





		[Column] public DateTime date { get; set; }





		[Column] public string thread { get; set; }





		[Column] public string level { get; set; }





		[Column] public string logger { get; set; }





		[Column("operator")] public int? @operator { get; set; }





		[Column] public string message { get; set; }





		[Column] public int? action_type { get; set; }





		[Column] public string operand { get; set; }





		[Column] public string ip { get; set; }





		[Column] public string machine_name { get; set; }





		[Column] public string browser { get; set; }





		[Column] public string location { get; set; }





		[Column] public string exception { get; set; }



	}

    

	[TableName("dbo.sys_server_info_mst")]



	[PrimaryKey("id")]




	[ExplicitColumns]

    public partial class sys_server_info_mst : PetaPocoDB.Record<sys_server_info_mst>  
    {



		[Column] public int id { get; set; }





		[Column] public string ip { get; set; }





		[Column] public string point { get; set; }





		[Column] public string remark { get; set; }





		[Column] public int? row_version { get; set; }





		[Column] public string status { get; set; }





		[Column] public string update_user { get; set; }





		[Column] public DateTime update_time { get; set; }





		[Column] public string create_user { get; set; }





		[Column] public DateTime create_time { get; set; }



	}

    

	[TableName("dbo.sys_user_mst")]



	[PrimaryKey("id", AutoIncrement=false)]


	[ExplicitColumns]

    public partial class sys_user_mst : PetaPocoDB.Record<sys_user_mst>  
    {



		[Column] public string id { get; set; }





		[Column] public string name { get; set; }





		[Column] public string password { get; set; }





		[Column] public string group_no { get; set; }





		[Column] public DateTime? password_miss_date { get; set; }





		[Column] public int? password_miss_count { get; set; }





		[Column] public string lock_status { get; set; }





		[Column] public int? row_version { get; set; }





		[Column] public string status { get; set; }





		[Column] public string update_user { get; set; }





		[Column] public DateTime update_time { get; set; }





		[Column] public string create_user { get; set; }





		[Column] public DateTime create_time { get; set; }



	}


}
